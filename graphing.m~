function graphing()
    clear;clc;clf

    a = [4 4 4 1 1;
        5 5 5 1 1;
        1 2 1 4 4;
        1 1 1 5 5];

    % use atransposea and aatranspose to find SVD breakdown
    ata = transpose(a)*a;
    aat = a*transpose(a);

    % solve for sigma (eigenvalues)
    e = eig(ata);
    s = sqrt(e);
    s = real(s);
    s = sort(s, 'descend');
    s = diag(s);

    % solve for U and V (eigenvectors)
    [V,~] = eig(ata);
    [U,~] = eig(aat);
    V = fliplr(V);
    U = fliplr(U);
    disp(U)
    disp(V)
    disp(s)
    

    labels=['AbCdEfGhIjkl'];
    a1=s(1,1)*U(:,1)*V(:,1)';%first single rank matrix
    subplot(121);hold on;grid on;
    for i=1:length(a),
        labels(2*i-1:2*i);
        text(-U(1,i),-V(1,i),labels(2*i-1:2*i))%vectors are displayed negated
    end
    %axis([0 .5 0 .5])%Change limits if needed
    xlabel('others agree with')
    ylabel('agrees with others')
     
     
%     a2=s(2,2)*u(:,2)*v(:,2)';%second single rank matrix
%     u2v2a2=[u(:,2) v(:,2) a2]%displays u2, v2, and a2
%     subplot(122);hold on;grid on;
%     for i=1:length(a),
%         text(u(i,2),v(i,2),labels(2*i-1:2*i))
%     end
%     %axis([-1 1 -1 1])%Change limits if needed
%     xlabel('others agree with')
%     ylabel('agrees with others')
%      
%      
%     a3=s(3,3)*u(:,3)*v(:,3)';%third single rank matrix
%     u3v3a3=[u(:,3) v(:,3) a3]%ditto
%      
%     rank3approx=a1+a2+a3%create a rank 3 approximation
%     %a-approx%difference with original

end
